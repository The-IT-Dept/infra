---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: portal-app
  namespace: portal

spec:
  releaseName: portal-app
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system

  values:
    image:
      repository: &repository ghcr.io/the-it-dept/node-isp
      tag: &tag portal-v0.3.8

    global:
      portal_backend: &portal-backend
        image:
          repository: *repository
          tag: *tag
          pullPolicy: IfNotPresent

        envFrom:
          - secretRef:
              name: portal-secrets

        env:
          APP_VERSION: *tag
          SERVER_NAME: :8080
          OCTANE_HTTPS: "true"

          TZ: Australia/Sydney

          APP_ADMIN_PORTAL: true
          APP_ADMIN_PORTAL_DOMAIN: &admin demo-admin.node.net.au
          APP_ADMIN_PORTAL_PATH:

          APP_PROVIDER_PORTAL: true
          APP_PROVIDER_PORTAL_BASE_DOMAIN: &provider demo.node.net.au
          APP_PROVIDER_PORTAL_PATH:

          APP_CUSTOMER_PORTAL: true
          APP_CUSTOMER_PORTAL_DOMAIN: &customer demo-customer.node.net.au
          APP_CUSTOMER_PORTAL_PATH:

    defaultPodOptions:
      imagePullSecrets:
        - name: ghcr-secret

    controllers:
      main:
        strategy: RollingUpdate
        containers:
          main:
            <<: *portal-backend

            # Move back to Octane once it's stable
            # command:
            #   - "php"
            #   - "artisan"
            #   - "octane:start"
            command:
              - frankenphp
              - run
              - --config
              - /etc/caddy/Caddyfile

        initContainers: &initContainers
          migrate:
            <<: *portal-backend
            command:
              - "php"
              - "artisan"
              - "migrate"
              - "--force"
              - "--isolated"

      schedule:
        enabled: true
        type: cronjob
        cronjob:
          schedule: "*/1 * * * *"
          startingDeadlineSeconds: 30
          backoffLimit: 1
          concurrencyPolicy: Forbid
        containers:
          main:
            <<: *portal-backend
            command:
              - "php"
              - "artisan"
              - "schedule:run"

        initContainers: *initContainers

      worker:
        enabled: true
        type: deployment
        containers:
          main:
            <<: *portal-backend
            command:
              - "php"
              - "artisan"
              - "horizon"

        initContainers: *initContainers

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: nginx

        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production

        hosts:
          - host: *admin
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http

          - host: *provider
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http

          - host: *customer
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http

        tls:
          - hosts:
              - *admin
            secretName: *admin

          - hosts:
              - *provider
            secretName: *provider

          - hosts:
              - *customer
            secretName: *customer

    persistence:
      storage:
        enabled: true
        type: persistentVolumeClaim
        size: 5Gi
        accessMode: ReadWriteOnce
        retain: true
        advancedMounts:
          main:
            main:
              - path: /app/storage/app/public
                readOnly: false
